function deriv_pressure = pressure_map_derivative(x,z,h_coeffs,h_coefficient_matrix)

%returns the (n-1)xn matrix for the derivative of the map that sounds h' to
%pressure

%we first vary the 3n coefficients of h, to get a (n-1)x3n matrix. This is
%then multiplied by the map that takes h' to coefficients of h.
%h_coeffs = h_coefficient_matrix*hprime_old(n+1:2*n);
n = length(x);
t = round(n/2);
infinity = 10^(10);

%the coefficients of h
a = h_coeffs(1:3:3*n-2);
b = h_coeffs(2:3:3*n-1);
c = h_coeffs(3:3:3*n);

%functions to find (-2/h^3).

h_quad_int = @(x,a,b,c) (-1).*(b.^2+(-4).*a.*c).^(-2).*((-1).*(b+2.*a.*x).*(c+x.*( ...
  b+a.*x)).^(-2).*(b.^2+(-6).*a.*b.*x+(-2).*a.*(5.*c+3.*a.*x.^2))+ ...
  24.*a.^2.*((-1).*b.^2+4.*a.*c).^(-1/2).*atan(((-1).*b.^2+4.*a.*c) ...
  .^(-1/2).*(b+2.*a.*x)));

presum_sqrt_int = @(x,a,b,c,xi) (27.*a.*b.^2.*c.*log(x.^(1/2)+(-1).*xi)+(-5).*a.*b.^3.*log( ...
 x.^(1/2)+(-1).*xi).*xi+27.*a.^2.*c.^2.*log(x.^(1/2)+(-1) ...
  .*xi).*xi).*(b+3.*a.*xi.^2).^(-1);

roots_sqrt_int = @(a,b,c) roots([a,0,b,c]);

h_sqrt_int = @(x,a,b,c) (-2).*(4.*b.^3+27.*a.*c.^2).^(-2).*((4.*b.^3+27.*a.*c.^2) ...
  .*(6.*b.*c+2.*b.^2.*x.^(1/2)+9.*a.*c.*x).*(c+x.^(1/2).*(b+a.*x)) ...
  .^(-2)+((-40).*b.^4+216.*a.*b.*c.^2+162.*a.*b.^2.*c.*x.^(1/2)+( ...
  -60).*a.*b.^3.*x+324.*a.^2.*c.^2.*x).*(c+x.^(1/2).*(b+a.*x)).^(-1) ...
  +12.*sum(presum_sqrt_int(x,a,b,c,roots_sqrt_int(a,b,c))));



%we first vary a. varying the first t-1 values of a variation require
%integrating -2/h^3 against x^(3/2) in panel t. The next require
%integrating -2/h^3 against x^2.

dh_a_sqrtrepn_presum = @(x,a,b,c,xi) (((-27).*b.^2.*c.* ...
  log(x.^(1/2)+(-1).*xi)+5.*b.^3.*log(x.^(1/2)+(-1).*xi).* ...
  xi+(-27).*a.*c.^2.*log(x.^(1/2)+(-1).*xi).*xi).*(b+ ...
  3.*a.*xi.^2).^(-1));

dh_a_sqrtrepn = @(x,a,b,c) (-2).*(4.*b.^3+27.*a.*c.^2).^(-2).*(a.^(-1).*(4.*b.^3+27.* ...
...
  a.*c.^2).*(3.*b.*c.^2+b.^2.*c.*x.^(1/2)+(-2).*b.^3.*x+(-9).*a.* ...
...
  c.^2.*x).*(c+x.^(1/2).*(b+a.*x)).^(-2)+a.^(-1).*c.*((-20).*b.^4+ ...
...
  108.*a.*b.*c.^2+81.*a.*b.^2.*c.*x.^(1/2)+(-30).*a.*b.^3.*x+162.* ...
...
  a.^2.*c.^2.*x).*(c+x.^(1/2).*(b+a.*x)).^(-1)+(-6).*c.*sum(dh_a_sqrtrepn_presum(x,a,b,c,(roots_sqrt_int(a,b,c)))));


dh_a_quadrepn = @(x,a,b,c) (-1).*(a.^(-1).*((-1).*b.^2+4.*a.*c).^(-1).*(b.*c+b.^2.*x+ ...
...
  (-2).*a.*c.*x).*(c+x.*(b+a.*x)).^(-2)+a.^(-1).*(b.^2+(-4).*a.*c) ...
...
  .^(-2).*(b.^2+2.*a.*c).*(b+2.*a.*x).*(c+x.*(b+a.*x)).^(-1)+4.*( ...
...
  b.^2+2.*a.*c).*((-1).*b.^2+4.*a.*c).^(-5/2).*atan(((-1).*b.^2+4.* ...
...
  a.*c).^(-1/2).*(b+2.*a.*x)));



dh_b_sqrtrepn_presum = @(x,a,b,c,xi) (16.*b.^3.* ...
log(x.^(1/2)+(-1).*xi)+(-135).*a.*c.^2.*log(x.^(1/2)+(-1).* ...
 xi)+81.*a.*b.*c.*log (x.^(1/2)+(-1).*xi).*xi).*(b+ ...
  3.*a.*xi.^2).^(-1);

dh_b_sqrtrepn = @(x,a,b,c) (-2).*(4.*b.^3+27.*a.*c.^2).^(-2).*((4.*b.^3+27.*a.*c.^2) ...
...
  .*((-9).*c.^2+(-3).*b.*c.*x.^(1/2)+2.*b.^2.*x).*(c+x.^(1/2).*(b+ ...
...
  a.*x)).^(-2)+b.*(108.*b.^2.*c+16.*b.^3.*x.^(1/2)+(-135).*a.*c.^2.* ...
...
  x.^(1/2)+162.*a.*b.*c.*x).*(c+x.^(1/2).*(b+a.*x)).^(-1)+2.*b.* ...
 ...
 sum(dh_b_sqrtrepn_presum(x,a,b,c,roots_sqrt_int(a,b,c))));

dh_b_quadrepn = @(x,a,b,c) (-1).*(b.^2+(-4).*a.*c).^(-2).*((b.^2+(-4).*a.*c).*(2.*c+ ...
...
  b.*x).*(c+x.*(b+a.*x)).^(-2)+(-3).*b.*(b+2.*a.*x).*(c+x.*(b+a.*x)) ...
...
  .^(-1)+(-12).*a.*b.*((-1).*b.^2+4.*a.*c).^(-1/2).*atan(((-1).* ...
 ...
 b.^2+4.*a.*c).^(-1/2).*(b+2.*a.*x)));

dh_c_quadrepn = @(x,a,b,c) (-1).*(b.^2+(-4).*a.*c).^(-2).*((-1).*(b+2.*a.*x).*(c+x.*( ...
...
  b+a.*x)).^(-2).*(b.^2+(-6).*a.*b.*x+(-2).*a.*(5.*c+3.*a.*x.^2))+ ...
...
  24.*a.^2.*((-1).*b.^2+4.*a.*c).^(-1/2).*atan(((-1).*b.^2+4.*a.*c) ...
...
  .^(-1/2).*(b+2.*a.*x)));

dh_c_sqrtrepn_presum = @(x,a,b,c,xi) (27.* ...
  ...
a.*b.^2.*c.*log(x.^(1/2)+(-1).*xi)+(-5).*a.*b.^3.*log (x.^( ...
 ...
 1/2)+(-1).*xi).*xi+27.*a.^2.*c.^2.*log (x.^(1/2)+(-1).* ...
...
  xi).*xi).*(b+3.*a.*xi.^2).^(-1);

dh_c_sqrtrepn = @(x,a,b,c) (-2).*(4.*b.^3+27.*a.*c.^2).^(-2).*((4.*b.^3+27.*a.*c.^2) ...
...
  .*(6.*b.*c+2.*b.^2.*x.^(1/2)+9.*a.*c.*x).*(c+x.^(1/2).*(b+a.*x)) ...
...
  .^(-2)+((-40).*b.^4+216.*a.*b.*c.^2+162.*a.*b.^2.*c.*x.^(1/2)+( ...
...
  -60).*a.*b.^3.*x+324.*a.^2.*c.^2.*x).*(c+x.^(1/2).*(b+a.*x)).^(-1) ...
...
  +12.*sum(dh_c_sqrtrepn_presum(x,a,b,c,roots_sqrt_int(a,b,c))));


%now produces a (n-1)x3n matrix with all these as entries

dp_h = zeros(n-1,3*n);

for j = 1:n-1
   for i = j:n
       %does the variation integral when i=j, integrate between z(j) and
       %x(i+1)
       if i == j
           %covers the case when i <= t-1
           if i <= t-1
               dp_h(j,3*(i-1)+1) = dh_a_sqrtrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_a_sqrtrepn(z(j),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+2) = dh_b_sqrtrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_b_sqrtrepn(z(j),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+3) = dh_c_sqrtrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_c_sqrtrepn(z(j),a(i),b(i),c(i));
           else
               dp_h(j,3*(i-1)+1) = dh_a_quadrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_a_quadrepn(z(j),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+2) = dh_b_quadrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_b_quadrepn(z(j),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+3) = dh_c_quadrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_c_quadrepn(z(j),a(i),b(i),c(i));              
           end
       else
           if i <= t-1
               dp_h(j,3*(i-1)+1) = dh_a_sqrtrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_a_sqrtrepn(x(i),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+2) = dh_b_sqrtrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_b_sqrtrepn(x(i),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+3) = dh_c_sqrtrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_c_sqrtrepn(x(i),a(i),b(i),c(i));
           elseif i ~= n
               dp_h(j,3*(i-1)+1) = dh_a_quadrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_a_quadrepn(x(i),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+2) = dh_b_quadrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_b_quadrepn(x(i),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+3) = dh_c_quadrepn(x(i+1),a(i),b(i),c(i)) ...
                   - dh_c_quadrepn(x(i),a(i),b(i),c(i));               
           else
               dp_h(j,3*(i-1)+1) = dh_a_quadrepn(infinity,a(i),b(i),c(i)) ...
                   - dh_a_quadrepn(x(i),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+2) = dh_b_quadrepn(infinity,a(i),b(i),c(i)) ...
                   - dh_b_quadrepn(x(i),a(i),b(i),c(i));
               dp_h(j,3*(i-1)+3) = dh_c_quadrepn(infinity,a(i),b(i),c(i)) ...
                   - dh_c_quadrepn(x(i),a(i),b(i),c(i));                              
           end           
       end
   end
end

%we computed it the wrong sign!
dp_h = -real(dp_h);

deriv_pressure = dp_h*h_coefficient_matrix;
