function [adjust, d_adjust] = bending_p_adjust(x,h_coeffs,h_coefficient_matrix)

n = length(x);
xend = x(n);
infinity = 10^(10);

a = h_coeffs(3*n-2);
b = h_coeffs(3*n-1);
c = h_coeffs(3*n);

%finds ...int_xend^infty 1/h^2 *(x-xend) dx, and its derivatives in a, b, c.
%outputs a scalar entry adjust, and a 3-element row vector d_adjust.

integral = @(x) (-1/6).*a.^(-1).*(2.*(b+2.*a.*x).^(-1)+(-1).*(b+2.*a.*x).^(-2).*( ...
  b+2.*a.*xend)+6.*((-1).*b.^2+4.*a.*c).^(-1/2).*atan(((-1).*b.^2+ ...
  4.*a.*c).^(-1/2).*(b+2.*a.*x))+6.*(b.^2+(-4).*a.*c).^(-1).*(b+2.* ...
  a.*xend).*log(b+2.*a.*x)+(-3).*(b.^2+(-4).*a.*c).^(-1).*(b+2.*a.* ...
  xend).*log(c+x.*(b+a.*x)));

da_integral = @(x) (1/6).*a.^(-2).*((b+2.*a.*x).^(-2).*((-5).*b+(-4).*a.*xend)+2.*b.* ...
...
  (b+2.*a.*x).^(-3).*(b+2.*a.*xend)+2.*(b.^2+(-4).*a.*c).^(-1).*(b+ ...
...
  2.*a.*x).^(-1).*(5.*b.^2+(-8).*a.*c+6.*a.*b.*xend)+(-6).*(b.^2+( ...
...
  -4).*a.*c).^(-1).*(c+x.*(b+a.*x)).^(-1).*(b.^2.*x+a.*c.*((-1).*x+ ...
...
  xend)+b.*(c+a.*x.*xend))+(-6).*(b.^2+(-6).*a.*c).*((-1).*b.^2+4.* ...
...
  a.*c).^(-3/2).*atan(((-1).*b.^2+4.*a.*c).^(-1/2).*(b+2.*a.*x))+6.* ...
...
  (b.^2+(-4).*a.*c).^(-2).*(b.^3+(-8).*a.*b.*c+(-8).*a.^2.*c.*xend) ...
...
  .*log(b+2.*a.*x)+(-3).*(b.^2+(-4).*a.*c).^(-2).*(b.^3+(-8).*a.*b.* ...
...
  c+(-8).*a.^2.*c.*xend).*log(c+x.*(b+a.*x)));

db_integral = @(x) (1/6).*a.^(-1).*(3.*(b+2.*a.*x).^(-2)+(-2).*(b+2.*a.*x).^(-3).*(b+ ...
...
  2.*a.*xend)+(-6).*(b.^2+(-4).*a.*c).^(-1).*(b+2.*a.*x).^(-1).*(b+ ...
...
  2.*a.*xend)+6.*(b.^2+(-4).*a.*c).^(-1).*(c+x.*(b+a.*x)).^(-1).*(c+ ...
...
  x.*(b+a.*xend))+(-6).*b.*((-1).*b.^2+4.*a.*c).^(-3/2).*atan(((-1) ...
...
  .*b.^2+4.*a.*c).^(-1/2).*(b+2.*a.*x))+6.*(b.^2+(-4).*a.*c).^(-2).* ...
...
  (b.^2+4.*a.*c+4.*a.*b.*xend).*log(b+2.*a.*x)+(-3).*(b.^2+(-4).*a.* ...
...
  c).^(-2).*(b.^2+4.*a.*c+4.*a.*b.*xend).*log(c+x.*(b+a.*x)));

dc_integral = @(x) (b.^2+(-4).*a.*c).^(-2).*((b.^2+(-4).*a.*c).*(c+x.*(b+a.*x)).^(-1) ...
...
  .*((-1).*x+xend)+2.*((-1).*b.^2+4.*a.*c).^(1/2).*atan(((-1).*b.^2+ ...
...
  4.*a.*c).^(-1/2).*(b+2.*a.*x))+(-4).*(b+2.*a.*xend).*log(b+2.*a.* ...
...
  x)+2.*(b+2.*a.*xend).*log(c+x.*(b+a.*x)));

adjust = integral(infinity) - integral(xend);

d_adjust = zeros(1,3*n);
d_adjust(3*n-2) = da_integral(infinity) - da_integral(xend);
d_adjust(3*n-1) = db_integral(infinity) - db_integral(xend);
d_adjust(3*n) = dc_integral(infinity) - dc_integral(xend);

d_adjust = d_adjust*h_coefficient_matrix;

return
end
