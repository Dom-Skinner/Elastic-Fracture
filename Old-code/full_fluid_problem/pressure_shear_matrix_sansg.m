function [kernel_matrix, interpolate_matrix] = pressure_shear_matrix_sansg(x,z)

n = length(x);
t = round(n/2);
infinity = 10^10;

interpolate_matrix = linear_simpleinfty_interpolate_sansg(x);
function_matrix = zeros(n-1,2*n);



%FINDS ALL THE KERNEL FUNCTIONS

%finds the kernel K12

K12x1 = @(x,z) real(2.*(4+(x+(-1).*z).^2).^(-2).*((-8).*x+(-1).*(4+(x+(-1).*z).^2).*z) ...
  +(1/2).*z.*log(4+(x+(-1).*z).^2)+(-1).*z.*log(x+(-1).*z));
  
  
K12x0 = @(x,z) real((-2).*(4+x.^2+(-2).*x.*z+z.^2).^(-2).*(12+x.^2+(-2).*x.*z+z.^2)+( ...
  1/2).*log(4+(x+(-1).*z).^2)+(-1).*log(x+(-1).*z));

K12x2 = @(x,z) real((1/2).*(32.*(4+(-2).*x.*z+z.^2).*(4+x.^2+(-2).*x.*z+z.^2).^(-2)+( ...
...
  -4).*(12+z.^2).*(4+x.^2+(-2).*x.*z+z.^2).^(-1)+z.^2.*log(4+(x+(-1) ...
...
  .*z).^2)+(-2).*z.^2.*log(x+(-1).*z)));

K12xmin1 = @(x,z) real((1/4).*(64.*(4+(x+(-1).*z).^2).^(-2).*(x+(-2).*z).*(4+z.^2).^(-1)+ ...
...
  (-8).*(4+z.^2).^(-2).*(4+x.^2+(-2).*x.*z+z.^2).^(-1).*((-16).*x+ ...
...
  36.*z+z.^3)+(sqrt(-1)*2).*((sqrt(-1)*(-2))+z).^(-3).*((-12)+(sqrt( ...
...
  -1)*(-6)).*z+z.^2).*atan(2.*(x+(-1).*z).^(-1))+(sqrt(-1)*(-2)).*(( ...
...
  sqrt(-1)*2)+z).^(-3).*((-12)+(sqrt(-1)*6).*z+z.^2).*atan(2.*(x+( ...
...
  -1).*z).^(-1))+64.*z.^(-1).*(4+(-3).*z.^2).*(4+z.^2).^(-3).*log(x) ...
...
  +((sqrt(-1)*(-2))+z).^(-3).*((-12)+(sqrt(-1)*(-6)).*z+z.^2).*log( ...
...
  4+(x+(-1).*z).^2)+((sqrt(-1)*2)+z).^(-3).*((-12)+(sqrt(-1)*6).*z+ ...
...
  z.^2).*log(4+(x+(-1).*z).^2)+(-4).*z.^(-1).*log(x+(-1).*z)));

K12xmin2 = @(x,z) real((1/4).*(64.*(4+2.*x.*z+(-3).*z.^2).*(4+z.^2).^(-2).*(4+x.^2+(-2).* ...
...
  x.*z+z.^2).^(-2)+64.*x.^(-1).*z.^(-1).*(4+z.^2).^(-3).*((-4)+3.* ...
...
  z.^2)+(-8).*(4+z.^2).^(-3).*(4+x.^2+(-2).*x.*z+z.^2).^(-1).*((-80) ...
...
  +(-64).*x.*z+112.*z.^2+z.^4)+(sqrt(-1)*2).*((sqrt(-1)*(-2))+z).^( ...
...
  -4).*((-24)+(sqrt(-1)*(-8)).*z+z.^2).*atan(2.*(x+(-1).*z).^(-1))+( ...
...
  sqrt(-1)*(-2)).*((sqrt(-1)*2)+z).^(-4).*((-24)+(sqrt(-1)*8).*z+ ...
...
  z.^2).*atan(2.*(x+(-1).*z).^(-1))+64.*z.^(-2).*(4+z.^2).^(-4).*( ...
...
  16+40.*z.^2+(-15).*z.^4).*log(x)+((sqrt(-1)*(-2))+z).^(-4).*((-24) ...
...
  +(sqrt(-1)*(-8)).*z+z.^2).*log(4+(x+(-1).*z).^2)+((sqrt(-1)*2)+z) ...
...
  .^(-4).*((-24)+(sqrt(-1)*8).*z+z.^2).*log(4+(x+(-1).*z).^2)+(-4).* ...
...
  z.^(-2).*log(x+(-1).*z)));


%finds the kernel K12

K12sqrtx3 = @(x,z) real((1/2).*(2.*x.^(1/2).*(4+x.^2+(-2).*x.*z+z.^2).^(-2).*(x.^3.*z+7.* ...
...
  x.*z.*(4+z.^2)+(-3).*(4+z.^2).^2+(-1).*x.^2.*(28+5.*z.^2))+((sqrt( ...
...
  -1)*2)+(-1).*z).^(-1/2).*((sqrt(-1)*6)+z+(sqrt(-1)*(-2)).*z.^2+2.* ...
...
  z.^3).*atan(x.^(1/2).*((sqrt(-1)*2)+(-1).*z).^(-1/2))+4.*z.^(5/2) ...
...
  .*atanh(x.^(1/2).*z.^(-1/2))+(-1).*((sqrt(-1)*2)+z).^(-1/2).*(( ...
...
  sqrt(-1)*(-6))+z+(sqrt(-1)*2).*z.^2+2.*z.^3).*atanh(x.^(1/2).*(( ...
...
  sqrt(-1)*2)+z).^(-1/2))));

K12sqrtx2 = @(x,z) real((1/2).*(2.*x.^(1/2).*((-16).*x+(4+(x+(-1).*z).^2).*(x+(-3).*z)).*( ...
...
  4+(x+(-1).*z).^2).^(-2)+((sqrt(-1)*2)+(-1).*z).^(-1/2).*(1+(sqrt( ...
...
  -1)*(-2)).*z+2.*z.^2).*atan(x.^(1/2).*((sqrt(-1)*2)+(-1).*z).^( ...
...
  -1/2))+4.*z.^(3/2).*atanh(x.^(1/2).*z.^(-1/2))+(-1).*((sqrt(-1)*2) ...
...
  +z).^(-1/2).*(1+(sqrt(-1)*2).*z+2.*z.^2).*atanh(x.^(1/2).*((sqrt( ...
...
  -1)*2)+z).^(-1/2))));

K12sqrtx1 = @(x,z) real((1/2).*(2.*x.^(1/2).*(4+(x+(-1).*z).^2).^(-2).*((-16)+((-4)+x.*z+( ...
...
  -3).*z.^2).*(4+z.^2).^(-1).*(4+x.^2+(-2).*x.*z+z.^2))+(-1).*(( ...
 ...
 sqrt(-1)*2)+(-1).*z).^(-3/2).*((-3)+(sqrt(-1)*(-6)).*z+2.*z.^2).* ...
...
  atan(x.^(1/2).*((sqrt(-1)*2)+(-1).*z).^(-1/2))+4.*z.^(1/2).*atanh( ...
...
  x.^(1/2).*z.^(-1/2))+(-1).*((sqrt(-1)*2)+z).^(-3/2).*((-3)+(sqrt( ...
...
  -1)*6).*z+2.*z.^2).*atanh(x.^(1/2).*((sqrt(-1)*2)+z).^(-1/2))));
  
  
K12sqrtx0 = @(x,z) real((1/2).*(2.*x.^(1/2).*(4+(x+(-1).*z).^2).^(-2).*(4+z.^2).^(-2).*( ...
 ...
 16.*(x+(-2).*z).*(4+z.^2)+(4+x.^2+(-2).*x.*z+z.^2).*((-3).*z.*(20+ ...
...
  z.^2)+x.*(28+z.^2)))+((sqrt(-1)*2)+(-1).*z).^(-5/2).*((-15)+(sqrt( ...
...
  -1)*(-10)).*z+2.*z.^2).*atan(x.^(1/2).*((sqrt(-1)*2)+(-1).*z).^( ...
...
  -1/2))+4.*z.^(-1/2).*atanh(x.^(1/2).*z.^(-1/2))+(-1).*((sqrt(-1)* ...
...
  2)+z).^(-5/2).*((-15)+(sqrt(-1)*10).*z+2.*z.^2).*atanh(x.^(1/2).*( ...
...
  (sqrt(-1)*2)+z).^(-1/2))));



for i=1:n-1
    %goes over the 1/sqrt(x) panels
    for j=1:t-1
        lx = x(j);
        ux = x(j+1);

        %for K12
        function_matrix(i,j) = K12sqrtx1(ux,z(i))-K12sqrtx1(lx,z(i));
        function_matrix(i,n+j) = K12sqrtx0(ux,z(i))-K12sqrtx0(lx,z(i));

    end
    %goes over the linear panels including infinity
    for j=t:n
        if j==n
            lx = x(n);
            ux = infinity;
        else
            lx = x(j);
            ux = x(j+1);
        end

        %for K12
        function_matrix(i,j) = K12x1(ux,z(i))-K12x1(lx,z(i));
        function_matrix(i,n+j) = K12x0(ux,z(i))-K12x0(lx,z(i));       
    end    
end        

kernel_matrix = function_matrix*interpolate_matrix;

return
end
    